---
import Layout from '../layouts/Layout.astro'
import groupBy from 'lodash/groupBy'
import keys from 'lodash/keys'
import {slugifySpace} from '@utils/format'
import {parseSlug} from '@utils/file'
import {useLocale} from '@utils/locale'
import {formatDateMD} from '@utils/format'
import {getAllPosts} from "@utils/content";


const {path, t, locale} = useLocale(Astro.url)
const {tag, category} = Astro.props
const {posts, tags} = await getAllPosts(locale, tag, category)

const filterType = tag ? 'tags' : 'categories'
const filterName = tag || category


function getTitle(post: any) {
    if (!locale || locale === 'zh') return post.title
    const enTitle = post['title-en']
    if (!enTitle) return post.title
    return enTitle
}
---

<Layout title={t('nav.posts')}  >

    {
        filterName && (
                <div class="mt-8 ">
                    <!--<span class=" font-normal">{t('message.more-about')}: </span>-->
                    <span class="text-xl font-bold italic ml-2" >
                   " {t(`${filterType}.` + filterName)} "
                    </span>
                </div>
        )
    }
    <main class="mt-8" >
        {
            posts.map((yearItem) => {
                return (
                        <>
                            <div class="text-2xl font-bold italic my-3">{yearItem.year}</div>
                            <ul class="px-2">
                                {yearItem.list.map((post: any) => {
                                    return (
                                            <li class="my-1 flex  transition-all duration-300">
                                        <span style={{flex: '0 0 5rem'}} class="text-gray-500">
                                            <time class="mr-2">{formatDateMD(post.pubDate)}</time>
                                        </span>
                                                <a rel="prefetch-intent" href={path(post.url)}
                                                   class="panda-link-static">
                                                    {getTitle(post)}
                                                </a>
                                            </li>
                                    )
                                })}
                            </ul>
                        </>
                )
            })
        }

        <div class="mt-6">
            {
                [...tags].map((tag) => {
                    return (
                            <a
                                    class="mr-1 text-sm panda-link my-1 hover:font-bold"
                                    href={'/tags/' + slugifySpace(tag)}
                            >
                                #{t('tags.' + tag)}
                            </a>
                    )
                })
            }
        </div>
    </main>
</Layout>
